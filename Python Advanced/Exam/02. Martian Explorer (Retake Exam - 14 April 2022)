from collections import deque


def get_next_position(row, col, direction):
    if direction == 'up':
        if row == 0:
            row, col = 5, col
        else:
            row, col = row-1, col
    elif direction == 'down':
        if row == 5:
            row, col = 0, col
        else:
            row, col = row+1, col
    elif direction == 'left':
        if col == 0:
            row, col = row, 5
        else:
            row, col = row, col-1
    elif direction == 'right':
        if col == 5:
            row, col = row, 0
        else:
            row, col = row, col+1
    return row, col


matrix = []

rower_row = 0
rower_col = 0
deposit = {"W": 0, "M": 0, "C": 0}
codes = {"W": "Water", "M": "Metal", "C": "Concrete"}
area = True

for i in range(6):
    matrix.append([x for x in input().split()])
    for j in range(6):
        if matrix[i][j] == "E":
            rower_row = i
            rower_col = j

route = deque([x for x in input().split(', ')])

while route:
    direction = route.popleft()
    next_row, next_col = get_next_position(rower_row, rower_col, direction)
    next_position = matrix[next_row][next_col]
    if next_position in deposit.keys():
        print(f"{codes[next_position]} deposit found at ({next_row}, {next_col})")
        deposit[next_position] += 1
        rower_row, rower_col = next_row, next_col
    elif next_position == "R":
        print(f"Rover got broken at ({next_row}, {next_col})")
        break
    else:
        rower_row, rower_col = next_row, next_col

for v in deposit.values():
    if v < 1:
        area = False

if not area:
    print("Area not suitable to start the colony.")
else:
    print("Area suitable to start the colony.")
